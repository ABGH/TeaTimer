package goo.TeaTimer;

import android.app.Activity;
import android.app.Dialog;
import android.app.TimePickerDialog;
import android.os.Bundle;
import android.os.Handler;
import android.os.Message;
import android.view.View;
import android.view.View.OnClickListener;
import android.widget.Button;
import android.widget.TextView;
import android.widget.TimePicker;
import android.widget.Toast;

public class TeaTimer extends Activity {

	private int mSet=0;

	private BotTimer mTimer;

	// Restart
	private OnClickListener startListener = new OnClickListener()
    {
        public void onClick(View v)
        {
			Button b = (Button)v;
			
			if(b.getText() == "Stop"){	
				onTimerStop();	
			}else{
				showDialog(0);
			}
		}
	};
	
	/** Called when the activity is first created. */
    @Override
    public void onCreate(Bundle savedInstanceState)
    {
        super.onCreate(savedInstanceState);
        setContentView(R.layout.downtimer);

		Button startButton = (Button)findViewById(R.id.stop);
        startButton.setOnClickListener(startListener);
    
		mTimer = new BotTimer(handler);
	}

	public void updateLabel(int time)
	{
		String val = BotTimer.time2str(time);
		TextView label = (TextView)findViewById(R.id.label); 
		label.setText(val);

		updateImage();
	}

	public void updateImage()
	{
		/*ImageView i = (ImageView)findViewById(R.id.imageView);

		Bitmap bg = TimerAnimation.update(300,150,mTimer.getTime(),mSet);
		
		i.setImageBitmap(bg);*/
	}
		
	@Override
	protected Dialog onCreateDialog(int id) {
    	switch (id) {
    	case 0:
        	return new TimePickerDialog(this,
                mTimeSetListener, 1, 0, true);
    	}
    	return null;
	}

	// the callback received when the user "sets" the time in the dialog
	private TimePickerDialog.OnTimeSetListener mTimeSetListener =
    	new TimePickerDialog.OnTimeSetListener() {
        	public void onTimeSet(TimePicker view, int hourOfDay, int minute) {
        		//Log.v("HOUR: " + hourOfDay + " min: " + minute);
				mSet = hourOfDay*60*60*1000 + minute*60*1000;
				onTimerStart();
			}
    	};

	// 
	private void onTimerStop()
	{
		Button b = (Button)findViewById(R.id.stop);

		b.setText("Start");
		mTimer.stop();
	}

	private void onTimerStart()
	{
		Button b = (Button)findViewById(R.id.stop);

		b.setText("Stop");
		mTimer.start();
	}

	private void onTimerFinished()
	{
		onTimerStop();
		clearTime();

		Toast fin = Toast.makeText(this,"Timer Finished!",Toast.LENGTH_SHORT);
		fin.show();
	}

	private void clearTime()
	{
		mSet = 0;
		updateLabel(mSet);
	}

	private Handler handler = new Handler() {
		@Override
        public void handleMessage(Message msg) {
        	
			int rest = mSet - mTimer.getTime();
			updateLabel(rest);

			if(rest <= 0)
			{
				onTimerFinished();
			}

		}
    };
}